{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\React\\\\date-operations\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport classes from './Input.css';\n\nvar input = function input(props) {\n  var inputElement = null;\n  var errorBlock = null;\n  var inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      if (props.errorMsg) {\n        errorBlock = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, props.errorMsg);\n      } else {\n        errorBlock = null;\n      }\n\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.label), inputElement, errorBlock);\n};\n\nexport default input;","map":{"version":3,"sources":["E:\\Code\\React\\date-operations\\src\\components\\UI\\Input\\Input.js"],"names":["React","classes","input","props","inputElement","errorBlock","inputClasses","InputElement","invalid","touched","push","Invalid","elementType","errorMsg","join","elementConfig","value","changed","Input","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,UAAU,GAAI,IAAlB;AACA,MAAMC,YAAY,GAAG,CAACL,OAAO,CAACM,YAAT,CAArB;;AAEA,MAAIJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,OAA3B,EAAoC;AAChCH,IAAAA,YAAY,CAACI,IAAb,CAAkBT,OAAO,CAACU,OAA1B;AACH;;AAED,UAAQR,KAAK,CAACS,WAAd;AACI,SAAM,OAAN;AACI,UAAIT,KAAK,CAACU,QAAV,EAAoB;AAChBR,QAAAA,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,KAAK,CAACU,QAAZ,CAAb;AACH,OAFD,MAEO;AACHR,QAAAA,UAAU,GAAI,IAAd;AACH;;AACDD,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAEE,YAAY,CAACQ,IAAb,CAAkB,GAAlB;AADA,SAEPX,KAAK,CAACY,aAFC;AAGX,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAHF;AAIX,QAAA,QAAQ,EAAEb,KAAK,CAACc,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAKA;;AACJ;AACIb,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAEE,YAAY,CAACQ,IAAb,CAAkB,GAAlB;AADA,SAEPX,KAAK,CAACY,aAFC;AAGX,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAHF;AAIX,QAAA,QAAQ,EAAEb,KAAK,CAACc,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAdR;;AAoBA,SACI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACiB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAEjB,OAAO,CAACkB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkChB,KAAK,CAACiB,KAAxC,CADJ,EAEKhB,YAFL,EAGKC,UAHL,CADJ;AASH,CAtCD;;AAwCA,eAAeH,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    let errorBlock  = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            if (props.errorMsg) {\r\n                errorBlock = <div>{props.errorMsg}</div>\r\n            } else {\r\n                errorBlock =  null;\r\n            }\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {errorBlock}\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default input;"]},"metadata":{},"sourceType":"module"}