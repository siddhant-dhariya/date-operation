{"ast":null,"code":"import _classCallCheck from \"E:\\\\Code\\\\React\\\\date-operations\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Code\\\\React\\\\date-operations\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Code\\\\React\\\\date-operations\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Code\\\\React\\\\date-operations\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Code\\\\React\\\\date-operations\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Code\\\\React\\\\date-operations\\\\src\\\\containers\\\\DateOperations.js\";\nimport React, { Component } from 'react';\nimport Input from '../components/UI/Input/Input';\nimport classes from './DateOperations.css';\n\nvar DateOperations =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DateOperations, _Component);\n\n  function DateOperations() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DateOperations);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DateOperations)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      dateForm: {\n        startDate: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'DD/MM/YYYY'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        endDate: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'DD/MM/YYYY'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isFormValid: false\n    };\n\n    _this.dateSubmitHandler = function (event) {\n      // To prevent the form from submitting\n      event.preventDefault();\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      if (inputIdentifier === 'startDate') {\n        _this.setState({\n          startDate: event.target.value\n        });\n      } else {\n        _this.setState({\n          endDate: event.target.value\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DateOperations, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.dateForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.dateForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        onSubmit: this.dateSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, formElementsArray.map(function (formElement) {\n        React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }), React.createElement(\"button\", {\n        onClick: this.dateSubmitHandler,\n        disabled: !this.state.isFormValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Submit\"));\n      return React.createElement(\"div\", {\n        className: classes.DateOperations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.dateSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Start Date: \"), React.createElement(\"input\", {\n        value: this.state.startDate,\n        placeholder: \"DD/MM/YYYY\",\n        onChange: function onChange(event) {\n          return _this2.inputChangedHandler(event, 'startDate');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"End Date: \"), React.createElement(\"input\", {\n        value: this.state.endDate,\n        placeholder: \"DD/MM/YYYY\",\n        onChange: function onChange(event) {\n          return _this2.inputChangedHandler(event, 'endDate');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DateOperations;\n}(Component);\n\nexport default DateOperations;","map":{"version":3,"sources":["E:\\Code\\React\\date-operations\\src\\containers\\DateOperations.js"],"names":["React","Component","Input","classes","DateOperations","state","loading","dateForm","startDate","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","endDate","isFormValid","dateSubmitHandler","event","preventDefault","inputChangedHandler","inputIdentifier","setState","target","formElementsArray","key","push","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Input from '../components/UI/Input/Input';\r\nimport classes from './DateOperations.css';\r\n\r\nclass DateOperations extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        dateForm: {\r\n            startDate: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'DD/MM/YYYY'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            endDate: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'DD/MM/YYYY'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isFormValid: false\r\n    };\r\n    // Method called on click of submit button\r\n    dateSubmitHandler = (event) => {\r\n        // To prevent the form from submitting\r\n        event.preventDefault();\r\n    };\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        if (inputIdentifier === 'startDate') {\r\n            this.setState({ startDate: event.target.value });\r\n        } else {\r\n            this.setState({ endDate: event.target.value });\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.dateForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.dateForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.dateSubmitHandler}>\r\n                {formElementsArray.map(formElement => {\r\n                    <Input\r\n                        key= {formElement.id}\r\n                        elementType = {formElement.config.elementType}\r\n                        elementConfig = {formElement.config.elementConfig}\r\n                        value = {formElement.config.value}\r\n                        invalid = {!formElement.config.valid}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                })}\r\n                <button onClick={this.dateSubmitHandler} disabled= {!this.state.isFormValid}>Submit</button>\r\n            </form>\r\n        );\r\n        return <div className={classes.DateOperations}>\r\n            <form onSubmit={this.dateSubmitHandler}>\r\n                <label>Start Date: </label>\r\n                <input\r\n                    value={this.state.startDate}\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    onChange={(event) => this.inputChangedHandler(event, 'startDate')} />\r\n                <br></br><br></br>\r\n                <label>End Date: </label>\r\n                <input value={this.state.endDate}\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    onChange={(event) => this.inputChangedHandler(event, 'endDate')} />\r\n                <br></br><br></br>\r\n                \r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default DateOperations;"]},"metadata":{},"sourceType":"module"}